var GameLayer = cc.Layer.extend({
	oneSprite : null,
	zeroSprite : null,
	currentInputValue:null,
	currentValue:[],
	numberList : [],
	size:null,
	numberLabel:null,
	count : 0,
	updateLatency:60,
	gameStatus:0,   // 0--> normal  1-->over
	renZhiList:[],
	finishAct:true,
	moveTime : 1,
	fadeOutTime:0.5,
	scaleTime:1,
	point:0,
	onEnter:function(){
		this._super();
		// init one sprite

		var oneItemPlay = cc.MenuItemSprite.create(cc.Sprite.create(res.one_png),
				cc.Sprite.create(res.one_png),
				this.inputOne, this);
		var oneMenu = cc.Menu.create(oneItemPlay);
		oneMenu.setPosition(200, 80);
		this.addChild(oneMenu);
		
		// init zero sprite
		var zeroItemPlay = cc.MenuItemSprite.create(cc.Sprite.create(res.zero_png),
				cc.Sprite.create(res.zero_png),
				this.inputZero,this);
		var zeroMenu = cc.Menu.create(zeroItemPlay);
		zeroMenu.setPosition(330, 80);
		this.addChild(zeroMenu);
		
		
		this.size = 4;
	
		
		//init the number label
//		this.numberLabel = cc.LabelTTF.create(this.showNumberList(), "Helvetica", 20);
//		this.numberLabel.setColor(cc.color(0,0,0));//black color
//		this.numberLabel.setPosition(cc.winSize.width/2, cc.winSize.height - 50);
//		this.addChild(this.numberLabel);
		
		
		

		this.schedule(this.update);
		
	},
	update:function(dt){
		if(this.gameStatus == 1) return;
		if(this.renZhiList.length == 0){
			this.updateRenZhi();
			cc.log("~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		}
		

		for(var i = 0;i<this.renZhiList.length;i++){			
			var act1 = cc.Sequence.create(
					cc.moveBy(0.5,cc.p(-0.5, 0)),
					cc.CallFunc.create(this.occurRenZhi,this));
			
			this.renZhiList[i].runAction(act1);
			
		}
	},
	finishAction:function(){
//		this.renZhiList.splice(0, 1);
//		this.updateRenZhi();
		this.finishAct =true;
		if(this.currentInputValue == this.currentValue){
			this.point ++;
			this.currentInputValue = null; // reset the current input for next input
			
//			// increase the speed
			this.moveTime -= 0.005*(this.point/5);
			if(this.moveTime <=0.3){
				this.moveTime =0.3;
			}
			this.fadeOutTime -= 0.002*(this.point/5);
			if(this.fadeOutTime <=0.35){
				this.fadeOutTime =0.35;
			}
			this.scaleTime -= 0.002*(this.point/5);
			if(this.scaleTime <=0.35){
				this.scaleTime =0.35;
			}
			cc.log(this.moveTime + "---"+this.fadeOutTime+"----"+this.scaleTime)
		}else{
			this.gameStatus = 1 //game over
		}
	},
	finishMove:function(){
		this.currentValue = this.renZhiList[0].value 
		this.renZhiList.splice(0, 1);	
	},
	inputOne:function(){
		this.currentInputValue =1;
	},
	inputZero:function(){
		this.currentInputValue =0;
	},
	createRandom:function(){
		return Math.round(Math.random());
	},
	updateRenZhi:function(){
		if(this.gameStatus == 1) return;
			if(this.renZhiList.length<this.size){
				var num = this.createRandom();
				this.numberList.push(num);
				var renZhi = new RenZhiSprite();
				if(num == 1){
					renZhi.initData(res.renOne_png,1);
				}else{
					renZhi.initData(res.renZero_png,0);
				}
				renZhi.setScale(40/100);
				renZhi.setPosition(cc.winSize.width-20, 220)
				this.addChild(renZhi);
				this.renZhiList.push(renZhi);
				
			}
	},
	showNumberList:function(){
		var result = "";
		for(var i = 0;i<this.size;i++){
			result+=this.numberList[i];
		}
		return result;
	},
	occurRenZhi : function(){
		if(this.renZhiList.length > this.size) return
		var lastRanzhi = this.renZhiList[this.renZhiList.length-1];
		var lastX  = lastRanzhi.x;
		if((cc.winSize.width-20) -lastX >= 28){
			this.updateRenZhi();
		}
	}
});